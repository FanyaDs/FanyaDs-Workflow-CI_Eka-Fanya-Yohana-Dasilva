name: MLflow Workflow CI - Fanya (Direct Training Mode)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # === [1] Checkout repository ===
      - name: Checkout repository
        uses: actions/checkout@v3

      # === [2] Setup Python ===
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      # === [3] Install dependencies ===
      - name: Install dependencies
        run: |
          echo "üì¶ Menginstal dependensi..."
          python -m pip install --upgrade pip
          pip install mlflow scikit-learn pandas dagshub docker joblib

      # === [4] Bersihkan artefak lama ===
      - name: Clean previous MLflow runs
        run: |
          echo "üßπ Menghapus folder MLflow lama..."
          rm -rf MLProject/mlruns || true
          rm -rf MLProject/artifacts || true

      # === [5] Jalankan training langsung ===
      - name: Run MLflow training (direct mode)
        run: |
          echo "üöÄ Menjalankan training langsung via MLProject..."
          cd MLProject
          export MLFLOW_TRACKING_URI="file://$(pwd)/mlruns"
          echo "üîß Tracking URI: $MLFLOW_TRACKING_URI"
          echo "üìÅ Isi direktori saat ini:"
          ls -R
          echo "‚ñ∂Ô∏è Menjalankan modelling.py ..."
          python modelling.py || { echo "‚ùå Training gagal, cek log di atas."; exit 1; }
          echo "‚úÖ Training selesai. Cek apakah mlruns terbentuk..."
          ls -R mlruns || echo "‚ö†Ô∏è Folder mlruns belum ada!"

      # === [6] Cek isi folder MLProject (debug tambahan) ===
      - name: Cek isi folder MLProject
        run: |
          echo "üìÇ Menampilkan isi direktori setelah training:"
          ls -R MLProject
          echo "üîé Pastikan ada folder mlruns/<experiment_id>/ dan file CSV."

      # === [7] Dapatkan run_id terbaru (FIX untuk dynamic experiment ID) ===
      - name: Get latest MLflow run_id
        id: get_run
        run: |
          cd MLProject
          echo "üîç Mendeteksi run_id terbaru..."
          if [ ! -d "mlruns" ]; then
            echo "‚ùå Folder mlruns belum terbentuk. Cek apakah training berhasil."
            ls -R
            exit 1
          fi
          # Ambil ID experiment terbaru
          EXPERIMENT_ID=$(basename $(ls -td mlruns/*/ | head -1))
          # Ambil run_id terbaru di dalam experiment itu
          RUN_ID=$(basename $(ls -td mlruns/${EXPERIMENT_ID}/*/ | head -1))
          echo "‚úÖ Run ID ditemukan di experiment ${EXPERIMENT_ID}: ${RUN_ID}"
          echo "experiment_id=$EXPERIMENT_ID" >> $GITHUB_OUTPUT
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

      # === [8] Upload artefak ke GitHub ===
      - name: Upload model artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: fanya-mlflow-model
          path: MLProject/mlruns/

      # === [9] Build Docker image dari model MLflow ===
      - name: Build Docker model
        run: |
          echo "üê≥ Membangun Docker image dari model MLflow..."
          cd MLProject
          MODEL_PATH="mlruns/${{ steps.get_run.outputs.experiment_id }}/${{ steps.get_run.outputs.run_id }}/artifacts/model"
          if [ ! -d "$MODEL_PATH" ]; then
            echo "‚ùå Model path tidak ditemukan: $MODEL_PATH"
            ls -R mlruns
            exit 1
          fi
          echo "üì¶ Path model ditemukan: $MODEL_PATH"
          mlflow models build-docker -m "$MODEL_PATH" -n fanya-mlflow-model

      # === [10] Login ke Docker Hub ===
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # === [11] Push Docker image ===
      - name: Tag and Push Docker image
        run: |
          echo "üö¢ Menandai dan mengunggah image ke Docker Hub..."
          docker tag fanya-mlflow-model:latest ${{ secrets.DOCKER_USERNAME }}/fanya-mlflow-model:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/fanya-mlflow-model:latest

      # === [12] Selesai ===
      - name: Complete job
        run: echo "‚úÖ Workflow CI selesai tanpa error!"
